{
  "version": 3,
  "sources": ["../MazeSolver.ts"],
  "sourcesContent": ["const dir = [\n  [-1, 0],\n  [1, 0],\n  [0, -1],\n  [0, 1],\n];\n\nfunction walk(maze: string[], wall: string, curr: Point, end: Point, seen: boolean[][], path: Point[]): boolean {\n  // 1. Off the map\n  if (curr.x < 0 || curr.x >= maze[0].length || curr.y < 0 || curr.y >= maze[0].length) {\n    return false;\n  }\n\n  // 2. on a wall\n  if (maze[curr.y][curr.x] === wall) {\n    return false;\n  }\n\n  // 3. found the end\n  if (curr.x === end.x && curr.y === end.y) {\n    path.push(end);\n    return true;\n  }\n\n  // 4. cached location\n  if (seen[curr.y][curr.x]) {\n    return false;\n  }\n\n  // pre\n  seen[curr.y][curr.x] = true;\n  path.push(curr);\n\n  // recurse\n  for (let i = 0; i < dir.length; ++i) {\n    const [x, y] = dir[i];\n    const next = {\n      x: curr.x + x,\n      y: curr.y + y,\n    };\n    if(walk(maze, wall, next, end, seen, path)) {\n      return true;\n    }\n  }\n\n  // post\n  path.pop();\n  return false;\n}\n\nexport default function solve(maze: string[], wall: string, start: Point, end: Point): Point[] {\n  const seen: boolean[][] = [];\n  const path: Point[] = [];\n\n  for (let i = 0; i < maze.length; ++i) {\n    seen.push(new Array(maze[0].length).fill(false));\n  }\n\n  walk(maze, wall, start, end, seen, path);\n\n  return path;\n}"],
  "mappings": ";;;;;;;AAAA;AAAA;AAAA;AAAA,MAAM,MAAM;AAAA,EACV,CAAC,IAAI;AAAA,EACL,CAAC,GAAG;AAAA,EACJ,CAAC,GAAG;AAAA,EACJ,CAAC,GAAG;AAAA;AAGN,cAAc,MAAgB,MAAc,MAAa,KAAY,MAAmB,MAAwB;AAE9G,MAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,UAAU,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,QAAQ;AACpF,WAAO;AAAA;AAIT,MAAI,KAAK,KAAK,GAAG,KAAK,OAAO,MAAM;AACjC,WAAO;AAAA;AAIT,MAAI,KAAK,MAAM,IAAI,KAAK,KAAK,MAAM,IAAI,GAAG;AACxC,SAAK,KAAK;AACV,WAAO;AAAA;AAIT,MAAI,KAAK,KAAK,GAAG,KAAK,IAAI;AACxB,WAAO;AAAA;AAIT,OAAK,KAAK,GAAG,KAAK,KAAK;AACvB,OAAK,KAAK;AAGV,WAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,EAAE,GAAG;AACnC,UAAM,CAAC,GAAG,KAAK,IAAI;AACnB,UAAM,OAAO;AAAA,MACX,GAAG,KAAK,IAAI;AAAA,MACZ,GAAG,KAAK,IAAI;AAAA;AAEd,QAAG,KAAK,MAAM,MAAM,MAAM,KAAK,MAAM,OAAO;AAC1C,aAAO;AAAA;AAAA;AAKX,OAAK;AACL,SAAO;AAAA;AAGM,eAAe,MAAgB,MAAc,OAAc,KAAqB;AAC7F,QAAM,OAAoB;AAC1B,QAAM,OAAgB;AAEtB,WAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,EAAE,GAAG;AACpC,SAAK,KAAK,IAAI,MAAM,KAAK,GAAG,QAAQ,KAAK;AAAA;AAG3C,OAAK,MAAM,MAAM,OAAO,KAAK,MAAM;AAEnC,SAAO;AAAA;",
  "names": []
}
